{"version":3,"sources":["main.js","app.js","host.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","navigator","protocol","serviceWorker","register","then","registration","onupdatefound","controller","installingWorker","installing","onstatechange","state","Error","catch","e","console","error","socket","io","on","joined","stringData","log","setInterval","emit","data","JSON","parse","$","document","ready","submit","this","ajaxSubmit","url","xhr","status","success","response","text","pass","code","val","querySelector","MaterialSnackbar","showSnackbar","message"],"mappings":"cAmBA,WAOE,IAAIA,EAAcC,QAAqC,cAA7BC,OAAOC,SAASC,UAET,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAIF,kBAAmBC,YACW,WAA7BJ,OAAOC,SAASI,UAAyBP,IAC5CM,UAAUE,cAAcC,SAAS,qBAChCC,KAAK,SAASC,GAEbA,EAAaC,cAAgB,WAK3B,GAAIN,UAAUE,cAAcK,WAAY,CAGtC,IAAIC,EAAmBH,EAAaI,WAEpCD,EAAiBE,cAAgB,WAC/B,OAAQF,EAAiBG,OACvB,IAAK,YAKH,MAEF,IAAK,YACH,MAAM,IAAIC,MAAM,yDASzBC,MAAM,SAASC,GAChBC,QAAQC,MAAM,4CAA6CF,KAnDjE,GClBA,WAGE,IAAMG,EAASC,KAEfD,EAAOE,GAAG,aAAc,cACxB,IAAIC,GAAS,EAUbH,EAAOE,GAAG,aAAc,SAAAE,GACtBN,QAAQO,IAAID,KAGdE,YAAY,WACVN,EAAOO,KAAK,YAAa,KACxB,KAEHP,EAAOE,GAAG,YAAa,SAAAM,GACrBL,GAAS,EACTL,QAAQO,IAAIF,GACZL,QAAQO,IAAII,KAAKC,MAAMF,MA3B3B,GCGEG,EAAEC,UAAUC,MAAM,WAChBF,EAAE,YAAYG,OAAO,WA6BnB,OA5BAH,EAAEI,MAAMC,YACNC,IAAK,SACLlB,MAAO,SAAAmB,GACL,OAAOC,OAAO,UAAYD,EAAIC,SAEhCC,QAAS,SAAAC,GACmB,KAAtBV,EAAE,SAASW,SAGXD,EAASE,MACXzB,QAAQO,IAAIgB,EAASG,MACrBb,EAAE,SAASc,IAAIJ,EAASG,MAEHZ,SAASc,cAAc,oBAI/BC,iBAAiBC,cAF5BC,QAAS,kBAIUjB,SAASc,cAAc,oBAI/BC,iBAAiBC,cAF5BC,QAAS,0BAOV","file":"main.min.js","sourcesContent":["/*!\n *\n *  Web Starter Kit\n *  Copyright 2015 Google Inc. All rights reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License\n *\n */\n/* eslint-env browser */\n(function() {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n    );\n\n  if ('serviceWorker' in navigator &&\n      (window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js')\n    .then(function(registration) {\n      // updatefound is fired if service-worker.js changes.\n      registration.onupdatefound = function() {\n        // updatefound is also fired the very first time the SW is installed,\n        // and there's no need to prompt for a reload at that point.\n        // So check here to see if the page is already controlled,\n        // i.e. whether there's an existing service worker.\n        if (navigator.serviceWorker.controller) {\n          // The updatefound event implies that registration.installing is set:\n          // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n          var installingWorker = registration.installing;\n\n          installingWorker.onstatechange = function() {\n            switch (installingWorker.state) {\n              case 'installed':\n                // At this point, the old content will have been purged and the\n                // fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in the page's interface.\n                break;\n\n              case 'redundant':\n                throw new Error('The installing ' +\n                                'service worker became redundant.');\n\n              default:\n                // Ignore\n            }\n          };\n        }\n      };\n    }).catch(function(e) {\n      console.error('Error during service worker registration:', e);\n    });\n  }\n\n  // Your custom JavaScript goes here\n})();\n","/* eslint-env browser */\r\n(function() {\r\n  'use strict';\r\n\r\n  const socket = io();\r\n\r\n  socket.on('connection', () => {});\r\n  let joined = false;\r\n\r\n  function join() {\r\n    const data = {\r\n      game: $('#gamecode').val(),\r\n      player: $('#player').val()\r\n    };\r\n\r\n    socket.emit('join', JSON.stringify(data));\r\n  }\r\n  socket.on('joinstatus', stringData => {\r\n    console.log(stringData);\r\n  });\r\n\r\n  setInterval(() => {\r\n    socket.emit('gamestate', '');\r\n  }, 1000);\r\n\r\n  socket.on('gamestate', data => {\r\n    joined = true;\r\n    console.log(joined);\r\n    console.log(JSON.parse(data));\r\n  });\r\n\r\n  // Your custom JavaScript goes here\r\n})();\r\n","/* eslint-env browser */\r\n(function() {\r\n  'use strict';\r\n\r\n  $(document).ready(() => {\r\n    $('#captcha').submit(function() {\r\n      $(this).ajaxSubmit({\r\n        url: 'create',\r\n        error: xhr => {\r\n          return status('Error: ' + xhr.status);\r\n        },\r\n        success: response => {\r\n          if ($('#code').text() !== '') {\r\n            return;\r\n          }\r\n          if (response.pass) {\r\n            console.log(response.code);\r\n            $('#code').val(response.code);\r\n\r\n            const notification = document.querySelector('.mdl-js-snackbar');\r\n            const data = {\r\n              message: 'Game created'\r\n            };\r\n            notification.MaterialSnackbar.showSnackbar(data);\r\n          } else {\r\n            const notification = document.querySelector('.mdl-js-snackbar');\r\n            const data = {\r\n              message: 'reCAPTCHA failed'\r\n            };\r\n            notification.MaterialSnackbar.showSnackbar(data);\r\n          }\r\n        }\r\n      });\r\n\r\n      return false;\r\n    });\r\n  });\r\n\r\n  function copyGameCode() {\r\n    var copyText = document.getElementById('code');\r\n    copyText.select();\r\n    document.execCommand('Copy');\r\n    copyText.blur();\r\n\r\n    var notification = document.querySelector('.mdl-js-snackbar');\r\n    var data = {\r\n      message: 'Gamecode copied!'\r\n    };\r\n    notification.MaterialSnackbar.showSnackbar(data);\r\n  }\r\n\r\n  // Your custom JavaScript goes here\r\n})();\r\n"]}